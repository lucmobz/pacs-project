#pragma once

#include <array>
#include "Traits.hpp"
#include "utilities_include.hpp"

namespace wave {
/// \brief Sample 3D quadrature class to be used for testing. Any quadrature
/// with the 4 static methods explained in QuadratureGaussLegendre is
/// admissible.
// see John Burkardt home page
class QuadratureKeastTetrahedron45 {
 private:
  // this class is a stateless singleton
  QuadratureKeastTetrahedron45() = delete;
  static constexpr int DIM = 3;
  static constexpr int SIZE = 45;
  static constexpr int EXACTNESS = 8;

 public:
  using scalar_t = Traits::scalar_t;
  using qpoint_t = Traits::qpoint_t<DIM>;
  using weights_t = std::array<scalar_t, SIZE>;
  using nodes_t = std::array<qpoint_t, SIZE>;

  /// \brief Get the number of quadrature nodes and weights.
  static constexpr auto size() -> auto { return SIZE; }
  /// \brief Get the order of exactness of the quadrature rule.
  static constexpr auto exactness() -> auto { return EXACTNESS; }
  /// \brief Get the measure of the reference simplex.
  static constexpr auto measure() -> scalar_t {
    return 1 / static_cast<scalar_t>(utl::factorial(DIM));
  }
  /// \brief Get the quadrature weights.
  static constexpr auto weights() -> weights_t {
    return weights_t{-0.0393270066412926145,  0.00408131605934270525,
                     0.00408131605934270525,  0.00408131605934270525,
                     0.00408131605934270525,  0.000658086773304341943,
                     0.000658086773304341943, 0.000658086773304341943,
                     0.000658086773304341943, 0.00438425882512284693,
                     0.00438425882512284693,  0.00438425882512284693,
                     0.00438425882512284693,  0.00438425882512284693,
                     0.00438425882512284693,  0.0138300638425098166,
                     0.0138300638425098166,   0.0138300638425098166,
                     0.0138300638425098166,   0.0138300638425098166,
                     0.0138300638425098166,   0.00424043742468372453,
                     0.00424043742468372453,  0.00424043742468372453,
                     0.00424043742468372453,  0.00424043742468372453,
                     0.00424043742468372453,  0.00424043742468372453,
                     0.00424043742468372453,  0.00424043742468372453,
                     0.00424043742468372453,  0.00424043742468372453,
                     0.00424043742468372453,  0.00223873973961420164,
                     0.00223873973961420164,  0.00223873973961420164,
                     0.00223873973961420164,  0.00223873973961420164,
                     0.00223873973961420164,  0.00223873973961420164,
                     0.00223873973961420164,  0.00223873973961420164,
                     0.00223873973961420164,  0.00223873973961420164,
                     0.00223873973961420164};
  }
  /// \brief Get the quadrature nodes.
  static auto nodes() -> nodes_t {
    return nodes_t{qpoint_t{0.25, 0.25, 0.25},
                   qpoint_t{0.127470936566639015, 0.127470936566639015,
                            0.127470936566639015},
                   qpoint_t{0.617587190300082967, 0.127470936566639015,
                            0.127470936566639015},
                   qpoint_t{0.127470936566639015, 0.617587190300082967,
                            0.127470936566639015},
                   qpoint_t{0.127470936566639015, 0.127470936566639015,
                            0.617587190300082967},
                   qpoint_t{0.0320788303926322960, 0.0320788303926322960,
                            0.0320788303926322960},
                   qpoint_t{0.903763508822103123, 0.0320788303926322960,
                            0.0320788303926322960},
                   qpoint_t{0.0320788303926322960, 0.903763508822103123,
                            0.0320788303926322960},
                   qpoint_t{0.0320788303926322960, 0.0320788303926322960,
                            0.903763508822103123},
                   qpoint_t{0.450222904356718978, 0.0497770956432810185,
                            0.0497770956432810185},
                   qpoint_t{0.0497770956432810185, 0.450222904356718978,
                            0.0497770956432810185},
                   qpoint_t{0.0497770956432810185, 0.0497770956432810185,
                            0.450222904356718978},
                   qpoint_t{0.0497770956432810185, 0.450222904356718978,
                            0.450222904356718978},
                   qpoint_t{0.450222904356718978, 0.0497770956432810185,
                            0.450222904356718978},
                   qpoint_t{0.450222904356718978, 0.450222904356718978,
                            0.0497770956432810185},
                   qpoint_t{0.316269552601450060, 0.183730447398549945,
                            0.183730447398549945},
                   qpoint_t{0.183730447398549945, 0.316269552601450060,
                            0.183730447398549945},
                   qpoint_t{0.183730447398549945, 0.183730447398549945,
                            0.316269552601450060},
                   qpoint_t{0.183730447398549945, 0.316269552601450060,
                            0.316269552601450060},
                   qpoint_t{0.316269552601450060, 0.183730447398549945,
                            0.316269552601450060},
                   qpoint_t{0.316269552601450060, 0.316269552601450060,
                            0.183730447398549945},
                   qpoint_t{0.0229177878448171174, 0.231901089397150906,
                            0.231901089397150906},
                   qpoint_t{0.231901089397150906, 0.0229177878448171174,
                            0.231901089397150906},
                   qpoint_t{0.231901089397150906, 0.231901089397150906,
                            0.0229177878448171174},
                   qpoint_t{0.513280033360881072, 0.231901089397150906,
                            0.231901089397150906},
                   qpoint_t{0.231901089397150906, 0.513280033360881072,
                            0.231901089397150906},
                   qpoint_t{0.231901089397150906, 0.231901089397150906,
                            0.513280033360881072},
                   qpoint_t{0.0229177878448171174, 0.513280033360881072,
                            0.231901089397150906},
                   qpoint_t{0.0229177878448171174, 0.231901089397150906,
                            0.513280033360881072},
                   qpoint_t{0.513280033360881072, 0.0229177878448171174,
                            0.231901089397150906},
                   qpoint_t{0.513280033360881072, 0.231901089397150906,
                            0.0229177878448171174},
                   qpoint_t{0.231901089397150906, 0.0229177878448171174,
                            0.513280033360881072},
                   qpoint_t{0.231901089397150906, 0.513280033360881072,
                            0.0229177878448171174},
                   qpoint_t{0.730313427807538396, 0.0379700484718286102,
                            0.0379700484718286102},
                   qpoint_t{0.0379700484718286102, 0.730313427807538396,
                            0.0379700484718286102},
                   qpoint_t{0.0379700484718286102, 0.0379700484718286102,
                            0.730313427807538396},
                   qpoint_t{0.193746475248804382, 0.0379700484718286102,
                            0.0379700484718286102},
                   qpoint_t{0.0379700484718286102, 0.193746475248804382,
                            0.0379700484718286102},
                   qpoint_t{0.0379700484718286102, 0.0379700484718286102,
                            0.193746475248804382},
                   qpoint_t{0.0379700484718286102, 0.730313427807538396,
                            0.193746475248804382},
                   qpoint_t{0.0379700484718286102, 0.193746475248804382,
                            0.730313427807538396},
                   qpoint_t{0.730313427807538396, 0.193746475248804382,
                            0.0379700484718286102},
                   qpoint_t{0.730313427807538396, 0.0379700484718286102,
                            0.193746475248804382},
                   qpoint_t{0.193746475248804382, 0.730313427807538396,
                            0.0379700484718286102},
                   qpoint_t{0.193746475248804382, 0.0379700484718286102,
                            0.730313427807538396}};
  }
};
}  // namespace wave